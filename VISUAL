while not game:IsLoaded() do task.wait(0.1) end

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

if not UserInputService.TouchEnabled then
    warn("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö!")
    return
end

-- –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π GUI
local existing = player:WaitForChild("PlayerGui"):FindFirstChild("RainbowLoader")
if existing then existing:Destroy() end

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RainbowLoader"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.IgnoreGuiInset = true
screenGui.Parent = player:WaitForChild("PlayerGui")

local bg = Instance.new("Frame")
bg.Size = UDim2.new(1, 0, 1, 0)
bg.Position = UDim2.new(0, 0, 0, 0)
bg.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
bg.BackgroundTransparency = 0
bg.ZIndex = 50
bg.Parent = screenGui

local container = Instance.new("Frame")
container.Size = UDim2.new(0.75, 0, 0.24, 0)
container.Position = UDim2.new(0.5, 0, 0.5, 0)
container.AnchorPoint = Vector2.new(0.5, 0.5)
container.BackgroundTransparency = 0.15
container.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
container.ZIndex = 60
container.Parent = bg

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0.08, 0)
uiCorner.Parent = container

local stroke = Instance.new("UIStroke")
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
stroke.Thickness = 4
stroke.LineJoinMode = Enum.LineJoinMode.Round
stroke.Parent = container

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0.9, 0, 0.25, 0)
titleLabel.Position = UDim2.new(0.05, 0, 0.05, 0)
titleLabel.Text = "All in one Script By Nerix"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.Arcade
titleLabel.TextSize = 22
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.ZIndex = 70
titleLabel.Parent = container

local subtitleLabel = Instance.new("TextLabel")
subtitleLabel.Size = UDim2.new(0.9, 0, 0.2, 0)
subtitleLabel.Position = UDim2.new(0.05, 0, 0.3, 0)
subtitleLabel.Text = "INITIALIZING SYSTEM"
subtitleLabel.TextColor3 = Color3.fromRGB(139, 0, 0)
subtitleLabel.BackgroundTransparency = 1
subtitleLabel.Font = Enum.Font.Arcade
subtitleLabel.TextSize = 20
subtitleLabel.TextXAlignment = Enum.TextXAlignment.Left
subtitleLabel.ZIndex = 70
subtitleLabel.Parent = container

local percentLabel = Instance.new("TextLabel")
percentLabel.Size = UDim2.new(0.2, 0, 0.2, 0)
percentLabel.Position = UDim2.new(0.75, 0, 0.3, 0)
percentLabel.Text = "0%"
percentLabel.TextColor3 = Color3.new(1, 1, 1)
percentLabel.BackgroundTransparency = 1
percentLabel.Font = Enum.Font.Arcade
percentLabel.TextSize = 20
percentLabel.TextXAlignment = Enum.TextXAlignment.Right
percentLabel.ZIndex = 70
percentLabel.Parent = container

local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(0.9, 0, 0.15, 0)
progressBar.Position = UDim2.new(0.05, 0, 0.65, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
progressBar.BorderSizePixel = 0
progressBar.ZIndex = 60
progressBar.Parent = container

local barCorner = Instance.new("UICorner")
barCorner.CornerRadius = UDim.new(0.5, 0)
barCorner.Parent = progressBar

local progressFill = Instance.new("Frame")
progressFill.Size = UDim2.new(0, 0, 1, 0)
progressFill.BackgroundColor3 = Color3.fromRGB(100, 180, 255)
progressFill.BorderSizePixel = 0
progressFill.ZIndex = 61
progressFill.Parent = progressBar

local fillCorner = Instance.new("UICorner")
fillCorner.CornerRadius = UDim.new(0.5, 0)
fillCorner.Parent = progressFill

-- üåà –ê–Ω–∏–º–∞—Ü–∏—è —Ä–∞–¥—É–≥–∏
local function rainbowStroke()
    local hue = 0
    while true do
        hue = (hue + 0.005) % 1
        stroke.Color = Color3.fromHSV(hue, 0.8, 1)
        task.wait(0.05)
    end
end

-- üìà –ó–∞–≥—Ä—É–∑–∫–∞
local function ultraSlowLoad()
    local progress = 0
    while true do
        if progress < 99.9 then
            progress = progress + math.random() * 0.04
            if math.random(1, 10) > 8 then
                task.wait(math.random(0.3, 0.7))
            else
                task.wait(math.random(0.1, 0.25))
            end

            percentLabel.Text = string.format("%.1f%%", progress)
            progressFill.Size = UDim2.new(progress / 100, 0, 1, 0)

            if progress < 25 then
                subtitleLabel.Text = "LOADING CORE MODULES"
            elseif progress < 50 then
                subtitleLabel.Text = "ANALYZING ENVIRONMENT"
            elseif progress < 75 then
                subtitleLabel.Text = "PROCESSING DATA"
            else
                subtitleLabel.Text = "FINALIZING SETUP"
            end
        else
            percentLabel.Text = "99.9%"
            progressFill.Size = UDim2.new(0.999, 0, 1, 0)
            subtitleLabel.Text = "ALMOST DONE"
            task.wait(0.5)
        end
    end
end

-- ...–∞–Ω–∏–º–∞—Ü–∏—è —Ç–æ—á–µ–∫
local function animateDots()
    while true do
        for i = 1, 3 do
            subtitleLabel.Text = subtitleLabel.Text:gsub("%.*$", "") .. string.rep(".", i)
            task.wait(0.7)
        end
    end
end

-- üßº –£–¥–∞–ª–µ–Ω–∏–µ Blur –∏ –ª–∏—à–Ω–∏—Ö GUIs
local function removeBlurAndOverlays()
    local lighting = game:GetService("Lighting")
    for _, v in pairs(lighting:GetChildren()) do
        if v:IsA("BlurEffect") or v:IsA("ColorCorrectionEffect") then
            v:Destroy()
        end
    end

    local coreGui = game:GetService("CoreGui")
    for _, gui in pairs(coreGui:GetChildren()) do
        if gui:IsA("ScreenGui") and gui.Name ~= "RainbowLoader" then
            gui:Destroy()
        end
    end
end

-- üîÅ –£–¥–∞–ª—è—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –∫–∞–∂–¥—ã–µ 1 —Å–µ–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫
for i = 1, 10 do
    task.delay(i, removeBlurAndOverlays)
end

-- ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏
coroutine.wrap(rainbowStroke)()
coroutine.wrap(ultraSlowLoad)()
coroutine.wrap(animateDots)()

print("Rainbow Loader activated successfully!")
